/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Profile, ProfileInterface } from "../Profile";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "username",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "ProfileCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "username_",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    name: "createProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "username_",
        type: "string",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "username",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bf8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630610a7a2146100465780630de72b7e14610076578063ba1feb8a146100a6575b600080fd5b610060600480360381019061005b919061069a565b6100c2565b60405161006d91906108c6565b60405180910390f35b610090600480360381019061008b91906106c3565b6101da565b60405161009d91906108c6565b60405180910390f35b6100c060048036038101906100bb9190610708565b6102d6565b005b60606100cd82610501565b61010c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010390610968565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461015590610a43565b80601f016020809104026020016040519081016040528092919081815260200182805461018190610a43565b80156101ce5780601f106101a3576101008083540402835291602001916101ce565b820191906000526020600020905b8154815290600101906020018083116101b157829003601f168201915b50505050509050919050565b60606101e68383610557565b610225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021c90610928565b60405180910390fd5b600183836040516102379291906108ad565b9081526020016040518091039020805461025090610a43565b80601f016020809104026020016040519081016040528092919081815260200182805461027c90610a43565b80156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b5050505050905092915050565b6000848490501161031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031390610908565b60405180910390fd5b60008282905011610362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035990610988565b60405180910390fd5b61037261036d610590565b610501565b156103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a9906108e8565b60405180910390fd5b6103bc8484610557565b156103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f390610948565b60405180910390fd5b8383600080610409610590565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209190610450929190610598565b508181600186866040516104659291906108ad565b90815260200160405180910390209190610480929190610598565b5081816040516104919291906108ad565b604051809103902084846040516104a99291906108ad565b60405180910390206104b9610590565b73ffffffffffffffffffffffffffffffffffffffff167f6b4494367229a908b0585b361e2871a21f8eb4cd852c02f55c9e06989f4bb2aa60405160405180910390a450505050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461054d90610a43565b9050119050919050565b6000806001848460405161056c9291906108ad565b9081526020016040518091039020805461058590610a43565b905011905092915050565b600033905090565b8280546105a490610a43565b90600052602060002090601f0160209004810192826105c6576000855561060d565b82601f106105df57803560ff191683800117855561060d565b8280016001018555821561060d579182015b8281111561060c5782358255916020019190600101906105f1565b5b50905061061a919061061e565b5090565b5b8082111561063757600081600090555060010161061f565b5090565b60008135905061064a81610bab565b92915050565b60008083601f84011261066257600080fd5b8235905067ffffffffffffffff81111561067b57600080fd5b60208301915083600182028301111561069357600080fd5b9250929050565b6000602082840312156106ac57600080fd5b60006106ba8482850161063b565b91505092915050565b600080602083850312156106d657600080fd5b600083013567ffffffffffffffff8111156106f057600080fd5b6106fc85828601610650565b92509250509250929050565b6000806000806040858703121561071e57600080fd5b600085013567ffffffffffffffff81111561073857600080fd5b61074487828801610650565b9450945050602085013567ffffffffffffffff81111561076357600080fd5b61076f87828801610650565b925092505092959194509250565b600061078983856109c4565b9350610796838584610a01565b82840190509392505050565b60006107ad826109a8565b6107b781856109b3565b93506107c7818560208601610a10565b6107d081610aa4565b840191505092915050565b60006107e86020836109b3565b91506107f382610ab5565b602082019050919050565b600061080b6017836109b3565b915061081682610ade565b602082019050919050565b600061082e601a836109b3565b915061083982610b07565b602082019050919050565b60006108516019836109b3565b915061085c82610b30565b602082019050919050565b6000610874601c836109b3565b915061087f82610b59565b602082019050919050565b60006108976012836109b3565b91506108a282610b82565b602082019050919050565b60006108ba82848661077d565b91508190509392505050565b600060208201905081810360008301526108e081846107a2565b905092915050565b60006020820190508181036000830152610901816107db565b9050919050565b60006020820190508181036000830152610921816107fe565b9050919050565b6000602082019050818103600083015261094181610821565b9050919050565b6000602082019050818103600083015261096181610844565b9050919050565b6000602082019050818103600083015261098181610867565b9050919050565b600060208201905081810360008301526109a18161088a565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006109da826109e1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610a2e578082015181840152602081019050610a13565b83811115610a3d576000848401525b50505050565b60006002820490506001821680610a5b57607f821691505b60208210811415610a6f57610a6e610a75565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4552524f525f414444524553535f414c52454144595f52454749535445524544600082015250565b7f4552524f525f555345524e414d455f49535f454d505459000000000000000000600082015250565b7f4552524f525f555345525f444f45535f4e4f545f455849535453000000000000600082015250565b7f4552524f525f555345524e414d455f4e4f545f554e4951554500000000000000600082015250565b7f4552524f525f414444524553535f4e4f545f5245474953544552454400000000600082015250565b7f4552524f525f5552495f49535f454d5054590000000000000000000000000000600082015250565b610bb4816109cf565b8114610bbf57600080fd5b5056fea264697066735822122097d63a4f69aeaeec56636e5fd413fd08aa10f916bac6d88b474c9fc6e92379eb64736f6c63430008030033";

export class Profile__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Profile> {
    return super.deploy(overrides || {}) as Promise<Profile>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Profile {
    return super.attach(address) as Profile;
  }
  connect(signer: Signer): Profile__factory {
    return super.connect(signer) as Profile__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfileInterface {
    return new utils.Interface(_abi) as ProfileInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Profile {
    return new Contract(address, _abi, signerOrProvider) as Profile;
  }
}
