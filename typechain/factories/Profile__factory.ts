/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Profile, ProfileInterface } from "../Profile";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addressRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "createProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "username",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
    ],
    name: "usernameExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c2a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630610a7a21461005c5780630de72b7e1461008c5780639d7809b5146100bc578063ba1feb8a146100ec578063f309e3f914610108575b600080fd5b61007660048036038101906100719190610696565b610138565b60405161008391906108ec565b60405180910390f35b6100a660048036038101906100a191906106bf565b610250565b6040516100b391906108ec565b60405180910390f35b6100d660048036038101906100d19190610696565b61034c565b6040516100e391906108d1565b60405180910390f35b61010660048036038101906101019190610704565b6103a2565b005b610122600480360381019061011d91906106bf565b610553565b60405161012f91906108d1565b60405180910390f35b60606101438261034c565b610182576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101799061098e565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546101cb90610a75565b80601f01602080910402602001604051908101604052809291908181526020018280546101f790610a75565b80156102445780601f1061021957610100808354040283529160200191610244565b820191906000526020600020905b81548152906001019060200180831161022757829003601f168201915b50505050509050919050565b606061025c8383610553565b61029b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102929061094e565b60405180910390fd5b600183836040516102ad9291906108b8565b908152602001604051809103902080546102c690610a75565b80601f01602080910402602001604051908101604052809291908181526020018280546102f290610a75565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b5050505050905092915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461039890610a75565b9050119050919050565b600084849050116103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df9061092e565b60405180910390fd5b6000828290501161042e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610425906109ae565b60405180910390fd5b61043e61043961058c565b61034c565b1561047e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104759061090e565b60405180910390fd5b6104888484610553565b156104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf9061096e565b60405180910390fd5b83836000806104d561058c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020919061051c929190610594565b508181600186866040516105319291906108b8565b9081526020016040518091039020919061054c929190610594565b5050505050565b600080600184846040516105689291906108b8565b9081526020016040518091039020805461058190610a75565b905011905092915050565b600033905090565b8280546105a090610a75565b90600052602060002090601f0160209004810192826105c25760008555610609565b82601f106105db57803560ff1916838001178555610609565b82800160010185558215610609579182015b828111156106085782358255916020019190600101906105ed565b5b509050610616919061061a565b5090565b5b8082111561063357600081600090555060010161061b565b5090565b60008135905061064681610bdd565b92915050565b60008083601f84011261065e57600080fd5b8235905067ffffffffffffffff81111561067757600080fd5b60208301915083600182028301111561068f57600080fd5b9250929050565b6000602082840312156106a857600080fd5b60006106b684828501610637565b91505092915050565b600080602083850312156106d257600080fd5b600083013567ffffffffffffffff8111156106ec57600080fd5b6106f88582860161064c565b92509250509250929050565b6000806000806040858703121561071a57600080fd5b600085013567ffffffffffffffff81111561073457600080fd5b6107408782880161064c565b9450945050602085013567ffffffffffffffff81111561075f57600080fd5b61076b8782880161064c565b925092505092959194509250565b61078281610a07565b82525050565b600061079483856109ea565b93506107a1838584610a33565b82840190509392505050565b60006107b8826109ce565b6107c281856109d9565b93506107d2818560208601610a42565b6107db81610ad6565b840191505092915050565b60006107f36020836109d9565b91506107fe82610ae7565b602082019050919050565b60006108166017836109d9565b915061082182610b10565b602082019050919050565b6000610839601a836109d9565b915061084482610b39565b602082019050919050565b600061085c6019836109d9565b915061086782610b62565b602082019050919050565b600061087f601c836109d9565b915061088a82610b8b565b602082019050919050565b60006108a26012836109d9565b91506108ad82610bb4565b602082019050919050565b60006108c5828486610788565b91508190509392505050565b60006020820190506108e66000830184610779565b92915050565b6000602082019050818103600083015261090681846107ad565b905092915050565b60006020820190508181036000830152610927816107e6565b9050919050565b6000602082019050818103600083015261094781610809565b9050919050565b600060208201905081810360008301526109678161082c565b9050919050565b600060208201905081810360008301526109878161084f565b9050919050565b600060208201905081810360008301526109a781610872565b9050919050565b600060208201905081810360008301526109c781610895565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610a0082610a13565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610a60578082015181840152602081019050610a45565b83811115610a6f576000848401525b50505050565b60006002820490506001821680610a8d57607f821691505b60208210811415610aa157610aa0610aa7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4552524f525f414444524553535f414c52454144595f52454749535445524544600082015250565b7f4552524f525f555345524e414d455f49535f454d505459000000000000000000600082015250565b7f4552524f525f555345525f444f45535f4e4f545f455849535453000000000000600082015250565b7f4552524f525f555345524e414d455f4e4f545f554e4951554500000000000000600082015250565b7f4552524f525f414444524553535f4e4f545f5245474953544552454400000000600082015250565b7f4552524f525f5552495f49535f454d5054590000000000000000000000000000600082015250565b610be6816109f5565b8114610bf157600080fd5b5056fea2646970667358221220a438da6f70e33a6454fc3b2cd36816461a57916f83152dec2e7b292ba3a33df964736f6c63430008030033";

export class Profile__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Profile> {
    return super.deploy(overrides || {}) as Promise<Profile>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Profile {
    return super.attach(address) as Profile;
  }
  connect(signer: Signer): Profile__factory {
    return super.connect(signer) as Profile__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfileInterface {
    return new utils.Interface(_abi) as ProfileInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Profile {
    return new Contract(address, _abi, signerOrProvider) as Profile;
  }
}
